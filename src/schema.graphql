union Participant = Player | Team

type Featured{
   participants: [Participant!]
}


 type Videogame{
   id: Int!
   name: String!
   slug: String!
 }
 
 type Team{
   id: Int!
   slug: String!
   acronym: String!
   name: String!
   location: String!
   players: [Player!]!
   image: String
   videogame: Videogame!
 }
  
 type Player {
   id: Int!
   slug: String!
   birthday: String
   videogame: Videogame!
   team: Team
   firstName: String!
   lastName: String!
   name: String!
   nationality: String!
   image: String
   role: String!

 }

 type Query {
  "returns a list of players"
   players(page: Int, per_page: Int): [Player!]!
   "returns a player by id"
   player(id: Int!): Player
   "returns a team by id"
   team(id: Int!): Team
   "returns a list of teams"
   teams(page: Int, per_page: Int): [Team!]
   "returns a videogame"
   videogame(id: Int!): Videogame
   "returns a list of videogames"
   videogames(limit: Int, page: Int): [Videogame!]
   featured: Featured
 }